---
import ContentLayout from "@/components/ContentLayout.astro";
import GradientBackground from "@/components/GradientBackground.astro";
import BaseHead from "@/components/layout/BaseHead.astro";
import Footer from "@/components/layout/Footer.astro";
import Header from "@/components/layout/Header.astro";
import MobileTableOfContent from "@/components/MobileTableOfContent.astro";
import PageFrame from "@/components/PageFrame.astro";
import TableOfContents from "@/components/TableOfContents.astro";
import type { TocItem } from "@/utils/generateToC";
import { ClientRouter } from "astro:transitions";
import LoadingIndicator from "astro-loading-indicator/component";

interface Props {
  title: string;
  description: string;
  toc?:
    | { minHeadingLevel: number; maxHeadingLevel: number; items: TocItem[] }
    | undefined;
}

const { title, description, toc } = Astro.props;
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
    <ClientRouter />
    <LoadingIndicator color="hsl(225, 100%, 64%)" />
  </head>
  <body>
    <GradientBackground />
    <PageFrame transition:animate="none">
      <Header slot="header">
        {toc && <MobileTableOfContent toc={toc} slot="mobile-toc" />}
      </Header>
      <ContentLayout slot="main">
        {toc && <TableOfContents toc={toc} slot="right-sidebar" />}
        <main>
          <slot />
        </main>
      </ContentLayout>
      <Footer slot="footer" />
    </PageFrame>
  </body>
</html>

<script>
  import { configStore } from "@/stores/configStore";

  configStore.subscribe(({ theme }) => {
    document.documentElement.dataset.theme = theme;
  });
</script>
